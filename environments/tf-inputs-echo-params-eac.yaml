spec_version: 2

environment:
  environment_name: eac-env-with-tf-inputs-echo-params
  owner_email: svetlana.c@quali.com
  state: active
  spaces:
    # - my-spec2-public  # local
    - sveta-eac  # reviews

inputs:
  agent_name:
    type: agent
    # default: eks # local
    default: sveta-eac  # reviews

outputs:
  tf_output:
    value: '1: {{ .grains.tf-inputs-echo.outputs.test_string1 }}, 2: {{ .grains.tf-inputs-echo.outputs.test_string2 }}, 3: {{ .grains.tf-inputs-echo.outputs.test_string3 }}'
  param_output:
    value: '{{ params.param3 }}'

grains:
  tf-inputs-echo:
    kind: terraform
    spec:
      agent:
        name: '{{ inputs.agent_name }}'
        kubernetes:
          pod-annotations:
            - my-annot: '{{ .params.custom-pod-annotation-value }}'
      source:
        store: test-spec2-public
        path: terraform/tf-inputs-echo
      workspace-directories:
        - source: 
            name: workspace_dir1
            store: test-spec2-public
            path: '{{ params.workspace-dir-path }}'
      inputs:
        - test_string1: 'ahoi {{ params.param1 }}'
        - test_string2: '{{ params.param2 }}'
        - test_string3: '{{ params.new_param }}'
      outputs:
        - test_string1
        - test_string2
        - test_string3
  
  sleep:
    kind: shell
    spec:
      agent:
        name: '{{.inputs.agent_name}}'
      activities:
        deploy:
          commands:
            - "sleep {{ .params.sleep_param }}"
        destroy:
          commands:
            - "sleep {{ .params.sleep_param }}"
  
  # nginx:
  #   kind: helm
  #   spec:
  #     source:
  #       store: test-spec2-public
  #       path: helm/nginx-stripped
  #     agent:
  #       name: '{{ .params.default_agent_name_param }}'
  #     target-namespace: '{{ params.default_target_namespace_param }}'
  #     release: '{{ envId | downcase }}'
  #     commands:
  #       - dep up helm/nginx-stripped
  #     inputs:
  #       - service.type: '{{ .params.nginx_service_type_param }}'
  #     scripts:
  #       post-helm-install:
  #         source:
  #           store: test-spec2-public
  #           path:  scripts/script-with-args.sh
  #         arguments: '{{ params.helm_arguments_param }}'
      