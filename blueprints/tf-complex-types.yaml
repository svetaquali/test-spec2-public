spec_version: 2-preview

description: description text


inputs:
  compute_service_name:
    type: agent    
  input_string:
    type: string
    display-style: normal
    default: "default1"
    description: "string"
#   input_list_string:
#     type: string
#     display-style: normal
#     description: "list string"
  input_map_string:
    type: string
    display-style: normal
    description: "map string"
  input_map_string_default:
    type: string
    default: '{     "key1" : "val_default1",     "key2" : "val_default2"   }'
    display-style: normal
    description: "map string"
  input_object:
    type: string
    display-style: normal
    description: "object"


outputs:
  output1:
    value: '{{sandboxId}}'
  output2:
    value: '{{.inputs.input_string}}'
  output3:
    value: '{{ .grains.second.outputs.test_map_string}}'
  output4:
    value: '{{ .grains.second.outputs.test_list_string}}'
  output5:
    value: '{{ .grains.second.outputs.test_object}}'
  output6:
    value: '{{ .grains.second.outputs.test_string_2}}'
  output7:
    value: '{{ .grains.first.outputs.test_string_2}}'


grains:
  first:
    kind: terraform
    spec:
      source:
        path: github.com/QualiNext/test-spec2-public.git//terraform/tf-complex-types
      agent:
        name: '{{.inputs.compute_service_name}}'
      inputs:
        - test_number: 6
        # - vm_name: '{{ .inputs.["VM Name"] }}'
        #  - source_cidr: '{{ .inputs.["Source CIDR"] }}'
        # - test_string_liquid: '{{.grains.helm-qualix.scripts.post-helm-install.outputs.qualixoutboundip | strip_newlines}}/32'
        - test_string_liquid: '{{.inputs.input_string | strip_newlines}}/32'
        - test_string: '{{.inputs.input_string}}'
#         - test_list_string: '{{.inputs.input_list_string}}'
        - test_list_string: '["a","b","c"]'
        - test_map_string: '{{.inputs.input_map_string}}'
        - test_map_string2: '{{.inputs.input_map_string_default}}'       
        - test_object: '{{.inputs.input_object}}'
        - test_liquid: env-id-{{sandboxId}}
        # - test_string_2: '{{.inputs.input_string}}'
      outputs:
        - test_number
        - test_string
        - test_list_string
        - test_map_string
        - test_object
        - test_string_2

  second:
    kind: terraform
    depends-on: first
    spec:
      source:
        path: github.com/QualiNext/test-spec2-public.git//terraform/tf-complex-types
      agent:
        name: '{{.inputs.compute_service_name}}'
      inputs:
        - test_number: '{{ .grains.first.outputs.test_number }}'
        - test_string: '{{ .grains.first.outputs.test_string }}'
        - test_string_liquid: '{{.inputs.input_string | strip_newlines}}/32'
        - test_list_string: '{{.grains.first.outputs.test_list_string}}'
        - test_map_string: '{     "key1" : "val1",     "key2" : "val2"   }'
        - test_map_string2: '{{.grains.first.outputs.test_map_string}}'   
        - test_object: '{{.grains.first.outputs.test_object}}'
        - test_liquid: env-id-{{sandboxId}}
        - test_string_2: '{{.grains.first.test_string_2}}'
      outputs:
        - test_string
        - test_list_string
        - test_map_string
        - test_object
        - test_string_2

  # similar to 'first' but provide also inputs in structured way 
  third:
    kind: terraform
    spec:
      source:
        path: github.com/QualiNext/test-spec2-public.git//terraform/tf-complex-types
      agent:
        name: '{{.inputs.compute_service_name}}'
      inputs:
        - test_number: 6
        # - vm_name: '{{ .inputs.["VM Name"] }}'
        #  - source_cidr: '{{ .inputs.["Source CIDR"] }}'
        # - test_string_liquid: '{{.grains.helm-qualix.scripts.post-helm-install.outputs.qualixoutboundip | strip_newlines}}/32'
        - test_string_liquid: '{{.inputs.input_string | strip_newlines}}/32'
        - test_string: '{{.inputs.input_string}}'
#         - test_list_string: '{{.inputs.input_list_string}}'
        - test_list_string:
            - a
            - b
            - c          
        - test_map_string: '{{.inputs.input_map_string}}'
        - test_map_string2: '{{.inputs.input_map_string_default}}'       
        - test_object:
            key1: ThisIsString
            key2: 5
        - test_liquid: env-id-{{sandboxId}}
      outputs:
        - test_number
        - test_string
        - test_list_string
        - test_map_string
        - test_object
