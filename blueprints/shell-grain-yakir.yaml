kind: bluperint 
spec_version: 2

inputs:
  some:
    default: some-default-value
  agent:
    type: agent
    
  repoUrl:
    type: string
    display-style: normal
    default: "http://github.com/QualiNext/test-spec2-public"
    description: "path to the repo to clone"

outputs:
  shell2-output1:
    value: '{{.inputs.some}} {{ .grains.shell2.activities.deploy.commands.cmd2.outputs.output1 }} {{.inputs.some}}'  

grains:
  shell1:
    kind: shell
    spec:
      agent:
        name: '{{.inputs.agent}}'
      files:
        - source: test-spec2-public
          path: scripts/echo.sh        
      env_vars:
        - VAR_NAME1: var1
      activities:
        deploy:
          commands:                                        
            - name: my_shell_script
              command: "source echo.sh"
              outputs:
                - output1
                - output2
            - 'echo second command'            
        destroy:
          commands:
            - echo "destroying"
            
  shell2:
    kind: shell
    depends-on: shell1
    spec:
      agent:
        name: '{{.inputs.agent}}'
      files:
        - source: test-spec2-public
          path: scripts/echo.sh        
      env_vars:
        - VAR_NAME1: var1
      activities:
        deploy:
          commands:                                        
            - name: cmd1
              command: "echo {{ .grains.shell1.activities.deploy.commands.my_shell_script.outputs.output1 }}"
            - name: cmd2
              command: "source echo.sh"
              outputs:
                - output1
                - output2            
        destroy:
          commands:
            - echo "destroying"

  shell3:
    kind: shell
    depends-on: shell1
    spec:
      agent:
        name: '{{.inputs.agent}}'      
      env_vars:
        - VAR_NAME1: var1
      activities:
        deploy:
          commands:                                        
            - name: cmd1
              command: "echo {{ .grains.shell1.activities.deploy.commands.my_shell_script.outputs.output1 }}"
            - name: cmd2
              command: "export output1=$(echo aa >> /tmp/tmpfile && echo outputval1)"
              outputs:
                - output1
                - output2            
            - name: sleep
              command: sleep 1
        destroy:
          commands:
            - echo "destroying"

